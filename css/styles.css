/* Base Styles */
:root {
    --primary-color: #00fff2;
    --secondary-color: #0575E6;
    --math-color: #4facfe;
    --science-color: #00f2fe;
    --english-color: #7367f0;
    --history-color: #fa709a;
    --danger-color: #ff1744;
    --warning-color: #ff9800;
    --success-color: #00ff9d;
    --text-color: #e0e0e0;
    --bg-light: rgba(255, 255, 255, 0.05);
    --bg-white: rgba(255, 255, 255, 0.08);
    --shadow-sm: 0 4px 8px rgba(0, 0, 0, 0.3);
    --shadow-md: 0 8px 16px rgba(0, 0, 0, 0.35);
    --shadow-lg: 0 15px 35px rgba(0, 0, 0, 0.4);
    --border-radius-sm: 8px;
    --border-radius-md: 12px;
    --border-radius-lg: 24px;
    --transition-speed: 0.4s;
    --neon-glow: 0 0 10px rgba(0, 255, 242, 0.5),
                 0 0 20px rgba(0, 255, 242, 0.3),
                 0 0 30px rgba(0, 255, 242, 0.1);
}

/* Reset and Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    background: linear-gradient(135deg, #000428 0%, #004e92 100%);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--text-color);
    perspective: 1500px;
}

/* App Container */
#app {
    width: 100%;
    max-width: 800px;
    margin: 20px;
    background: rgba(2, 13, 46, 0.7);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-lg);
    overflow: hidden;
    backdrop-filter: blur(10px);
    transform-style: preserve-3d;
    animation: float 6s ease-in-out infinite;
    border: 1px solid rgba(0, 255, 242, 0.2);
    position: relative;
}

#app::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent, rgba(0, 255, 242, 0.1));
    pointer-events: none;
}

/* Screen Transitions */
.screen {
    display: none;
    padding: 2rem;
    text-align: center;
    opacity: 0;
    transition: opacity var(--transition-speed) ease-in;
    transform-style: preserve-3d;
    transition: all var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
}

.screen.active {
    display: block;
    opacity: 1;
    animation: screenEnter 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes screenEnter {
    from {
        opacity: 0;
        transform: translateZ(-100px) rotateX(5deg);
    }
    to {
        opacity: 1;
        transform: translateZ(0) rotateX(0deg);
    }
}

/* Typography */
h1, h2, h3 {
    margin-bottom: 1.5rem;
    line-height: 1.2;
}

h1 {
    color: var(--primary-color);
    font-size: clamp(2rem, 5vw, 2.5rem);
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
}

h2 {
    color: var(--secondary-color);
    font-size: clamp(1.5rem, 4vw, 2rem);
}

/* Buttons and Interactive Elements */
button {
    background: rgba(0, 0, 0, 0.6);
    border: 1px solid var(--primary-color);
    color: var(--primary-color);
    text-shadow: 0 0 5px var(--primary-color);
    box-shadow: var(--neon-glow);
    transition: all 0.3s ease;
}

button:hover {
    background: rgba(0, 255, 242, 0.1);
    transform: translateY(-5px) translateZ(10px);
    box-shadow: 0 0 15px rgba(0, 255, 242, 0.5),
                0 0 30px rgba(0, 255, 242, 0.3),
                0 0 45px rgba(0, 255, 242, 0.1);
}

/* Add ripple effect */
button::after {
    content: '';
    position: absolute;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: scale(0);
    animation: ripple 0.6s linear;
    pointer-events: none;
}

@keyframes ripple {
    to {
        transform: scale(4);
        opacity: 0;
    }
}

/* Subject Grid */
.subjects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin: 2rem 0;
    padding: 1rem;
}

.subject-btn {
    min-height: 120px;
    position: relative;
    transform-style: preserve-3d;
    transition: all var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
    backdrop-filter: blur(5px);
    border: none;
    box-shadow: var(--neon-glow);
    overflow: hidden;
    color: white;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.subject-btn:nth-of-type(1) {
    background: linear-gradient(to right, #0000ff, #4169e1);  /* Math: Blue gradient */
}

.subject-btn:nth-of-type(2) {
    background: linear-gradient(to right, #ffa500, #ff8c00);  /* English: Orange gradient */
}

.subject-btn:nth-of-type(3) {
    background: linear-gradient(to right, #87ceeb, #00bfff);  /* Science: Light blue gradient */
}

.subject-btn:nth-of-type(4) {
    background: linear-gradient(to right, #ff4500, #ff6347);  /* MAPEH: Red-orange gradient */
}

.subject-btn:nth-of-type(5) {
    background: linear-gradient(to right, #008080, #4682b4);  /* Filipino: Green-blue gradient */
}

.subject-btn:nth-of-type(6) {
    background: linear-gradient(to right, #800080, #9370db);  /* AP: Purple gradient */
}

.subject-btn:nth-of-type(7) {
    background: linear-gradient(to right, #ff1493, #ff69b4);  /* Values: Pink-red gradient */
}

.subject-btn:nth-of-type(8) {
    background: linear-gradient(to right, #00ffff, #1e90ff);  /* ICT: Cyan-blue gradient */
}

.subject-btn:nth-of-type(9) {
    background: linear-gradient(to right, #ff4500, #ff8c00);  /* Cookery: Orange-red gradient */
}

.subject-btn:nth-of-type(10) {
    background: linear-gradient(to right, #008000, #32cd32);  /* Agriculture: Green gradient */
}

.subject-btn::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 25%, rgba(255, 255, 255, 0.1) 50%, transparent 75%);
    background-size: 200% 200%;
    animation: shimmer 3s linear infinite;
}

@keyframes shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
}

.subject-btn:hover {
    transform: translateY(-10px) translateZ(20px) rotateX(10deg);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
}

/* Matching game styles */
.matching-container {
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
}

.matching-title {
    text-align: center;
    margin-bottom: 2rem;
    color: var(--text-color);
}

.matching-pairs {
    display: flex;
    justify-content: space-between;
    gap: 40px;
    margin-top: 20px;
}

.items-column, .matches-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.matching-item, .matching-match {
    background: rgba(255, 255, 255, 0.1);
    padding: 15px;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: left;
    border: 2px solid transparent;
}

.items-column .matching-item {
    border-right: 3px solid var(--primary-color);
}

.matches-column .matching-match {
    border-left: 3px solid var(--secondary-color);
}

.matching-item.selected, .matching-match.selected {
    background: rgba(0, 255, 242, 0.2);
    border-color: var(--primary-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.matching-item.matched, .matching-match.matched {
    background: rgba(0, 255, 0, 0.2);
    border-color: #00ff00;
    cursor: default;
}

/* Game Elements */
.game-header {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(5px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: var(--text-color);
}

.timer {
    display: none;
    position: relative;
    padding: 1rem 2rem;
    background: rgba(0, 0, 0, 0.6);
    border: 2px solid var(--primary-color);
    border-radius: var(--border-radius-md);
    color: var(--primary-color);
    font-weight: bold;
    text-shadow: var(--neon-glow);
    box-shadow: var(--neon-glow);
    animation: pulse 2s infinite;
}

.timer.warning {
    color: var(--danger-color);
    border-color: var(--danger-color);
    animation: warningPulse 0.5s infinite;
    text-shadow: 0 0 10px rgba(255, 23, 68, 0.5),
                 0 0 20px rgba(255, 23, 68, 0.3),
                 0 0 30px rgba(255, 23, 68, 0.1);
}

@keyframes warningPulse {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.05); opacity: 0.8; }
    100% { transform: scale(1); opacity: 1; }
}

/* Matching type styles */
.matching-container {
    perspective: 1000px;
    transform-style: preserve-3d;
}

.matching-item, .matching-match {
    background: rgba(0, 0, 0, 0.6);
    border: 1px solid var(--primary-color);
    box-shadow: var(--neon-glow);
    transform-style: preserve-3d;
    transition: all 0.3s ease;
}

.matching-item:hover, .matching-match:hover {
    transform: translateZ(20px) scale(1.05);
    box-shadow: 0 0 20px rgba(0, 255, 242, 0.6);
}

.matching-item.selected, .matching-match.selected {
    background: rgba(0, 255, 242, 0.2);
    border-color: var(--primary-color);
    box-shadow: 0 0 30px rgba(0, 255, 242, 0.8);
}

/* 4 pics 1 word styles */
.pics4-container {
    max-width: 600px;
    margin: 0 auto;
    padding: 1rem;
    text-align: center;
}

.pics4-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    margin-bottom: 2rem;
}

.pic-container {
    aspect-ratio: 1;
    border: 2px solid var(--primary-color);
    border-radius: var(--border-radius-md);
    overflow: hidden;
}

.pics4-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.word-input {
    margin: 2rem auto;
    max-width: 300px;
}

.pics4-answer {
    width: 100%;
    padding: 1rem;
    font-size: 1.2rem;
    text-align: center;
    border: 2px solid var(--primary-color);
    border-radius: var(--border-radius-md);
    margin-bottom: 1rem;
}

.word-length {
    color: var(--secondary-color);
    font-style: italic;
    margin-bottom: 1rem;
}

.hint-text {
    color: var(--primary-color);
    font-size: 1.1rem;
    margin: 1rem 0;
}

/* Update game controls styling */
.game-controls {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
    flex-wrap: wrap;
}

.game-controls button {
    min-width: 150px;
}

/* Update back button styling */
.back-btn {
    margin: 2rem auto 0;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    background: var(--secondary-color);
    min-width: 150px;
}

/* Update hint button styling */
#hintBtn {
    background: var(--warning-color);
}

/* Update exit game button styling */
.exit-btn {
    background: var(--danger-color);
}

/* Add hover effects */
.back-btn:hover,
#hintBtn:hover,
.exit-btn:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

/* Add these styles for centering questionnaires */
.trivia-container {
    max-width: 600px;
    margin: 0 auto;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.trivia-question {
    font-size: 1.3rem;
    color: var(--primary-color);
    margin-bottom: 2rem;
    text-align: center;
    width: 100%;
    max-width: 500px;
}

.choices {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    margin: 2rem 0;
    width: 100%;
    max-width: 400px;
}

.choice-btn {
    width: 100%;
    text-align: center;
    padding: 1rem 1.5rem;
    background: var(--bg-light);
    border: 2px solid var(--primary-color);
    color: var(--text-color);
    font-size: 1.1rem;
    transition: all 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    position: relative;
    overflow: hidden;
    width: 100%; /* Make buttons full width within the column */
    max-width: 300px; /* Limit button width for smaller screens */
}

.choice-btn:hover:not(:disabled) {
    background: var(--primary-color);
    color: white;
    transform: translateY(-2px);
}

/* Word puzzle styles update */
.word-puzzle-container {
    max-width: 600px;
    margin: 0 auto;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.puzzle-word {
    font-size: 2rem;
    letter-spacing: 0.5rem;
    margin: 2rem 0;
    color: var(--primary-color);
}

.puzzle-hint {
    font-style: italic;
    color: var(--secondary-color);
    margin: 1rem 0;
}

.puzzle-input {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    margin: 2rem 0;
}

.puzzle-input input {
    text-align: center;
    font-size: 1.2rem;
    padding: 0.5rem;
    width: 200px;
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
    * {
        animation: none !important;
        transition: none !important;
    }
}

/* Dark Mode */
@media (prefers-color-scheme: dark) {
    :root {
        --text-color: #ffffff;
        --bg-light: #2c2c2c;
        --bg-white: #1c1c1c;
    }

    #app {
        background: rgba(28, 28, 28, 0.95);
    }

    .setting-item, 
    .high-score-item {
        background: rgba(255, 255, 255, 0.05);
    }

    input[type="text"],
    select {
        background: var(--bg-light);
        color: var(--text-color);
    }
}

/* Responsive Design */
@media (max-width: 768px) {
    .subjects-grid {
        grid-template-columns: repeat(2, 1fr);
    }

    .game-header {
        flex-direction: column;
    }

    .word-input {
        flex-direction: column;
    }
}

@media (max-width: 480px) {
    .subjects-grid {
        grid-template-columns: 1fr;
    }

    button {
        padding: 0.8rem 1.5rem;
        font-size: 1rem;
    }
}

/* Center the menu items */
.menu {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem; /* Space between buttons */
    margin-top: 2rem; /* Adjust this to move the buttons vertically */
}

/* Adjust button styles for consistency */
button {
    background: var(--primary-color);
    color: white;
    border: none;
    padding: 1rem 2rem;
    border-radius: var(--border-radius-md);
    font-size: 1.1rem;
    cursor: pointer;
    transition: all var(--transition-speed) ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    position: relative;
    overflow: hidden;
    width: 100%; /* Make buttons full width within the column */
    max-width: 300px; /* Limit button width for smaller screens */
}

/* Center the questionnaire */
.puzzle-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2rem;
}

/* Adjust the width of the questionnaire */
.puzzle-container > p, .puzzle-container > div {
    max-width: 500px; /* Adjust this value as needed */
    text-align: center;
}

/* Add this to your existing CSS */
.notification {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 1rem 2rem;
    border-radius: var(--border-radius-md);
    background: var(--primary-color);
    color: white;
    box-shadow: var(--shadow-md);
    display: none;
    z-index: 1000;
    animation: slideUp 0.3s ease-out;
}

@keyframes slideUp {
    from { transform: translate(-50%, 100%); }
    to { transform: translate(-50%, 0); }
}

.notification.warning {
    background: var(--warning-color);
}

.notification.error {
    background: var(--danger-color);
}

.notification.success {
    background: var(--success-color);
}

/* Add these styles for the game area */
.puzzle-container {
    margin: 2rem auto;
    max-width: 600px;
}

.definition {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    line-height: 1.5;
}

.word-input {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    margin-top: 2rem;
}

.word-input input {
    padding: 1rem;
    font-size: 1.1rem;
    border: 2px solid var(--primary-color);
    border-radius: var(--border-radius-md);
    width: 100%;
    max-width: 300px;
}

.word-input input:focus {
    outline: none;
    border-color: var(--secondary-color);
    box-shadow: 0 0 0 3px rgba(37, 117, 252, 0.2);
}

/* Add these styles for new screens */
.intro-content, .game-over-content {
    max-width: 600px;
    margin: 0 auto;
    text-align: left;
}

.objectives ul {
    list-style-position: inside;
    margin: 1rem 0;
    text-align: left;
}

.objectives li {
    margin: 0.5rem 0;
    padding-left: 1rem;
}

.intro-buttons, .game-over-buttons {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 2rem;
    align-items: center;
}

.final-stats {
    background: var(--bg-light);
    padding: 2rem;
    border-radius: var(--border-radius-md);
    margin: 2rem 0;
}

.final-stats p {
    font-size: 1.2rem;
    margin: 1rem 0;
}

.high-score-item {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem 1rem;
    background: var(--bg-light);
    border-radius: var(--border-radius-sm);
    margin: 0.5rem 0;
}

.high-score-item .subject {
    font-weight: bold;
    color: var(--primary-color);
    text-transform: capitalize;
}

.high-score-item .score {
    color: var(--secondary-color);
}

.primary-btn {
    background: var(--success-color);
}

.retry-btn {
    background: var(--warning-color);
}

.home-btn {
    background: var(--primary-color);
}

/* Add these styles for different question types */
.trivia-container .choices {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    margin-top: 2rem;
}

.choice-btn {
    width: 80%;
    max-width: 400px;
    padding: 15px 20px;
    font-size: 1rem;
    text-align: center;
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid var(--primary-color);
    border-radius: var(--border-radius-md);
    color: var(--text-color);
    cursor: pointer;
    transition: all 0.3s ease;
}

.choice-btn:hover:not(:disabled) {
    transform: translateY(-2px);
    background: rgba(0, 255, 242, 0.1);
    box-shadow: var(--neon-glow);
}

.choice-btn.correct {
    background: rgba(0, 255, 0, 0.2);
    border-color: #00ff00;
}

.choice-btn.incorrect {
    background: rgba(255, 0, 0, 0.2);
    border-color: #ff0000;
}

.choice-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
}

/* Add these styles for timer */
.timer {
    padding: 0.5rem 1rem;
    background: var(--bg-light);
    border-radius: var(--border-radius-md);
    font-weight: bold;
}

.timer.warning {
    color: var(--danger-color);
    animation: pulse 1s infinite;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

/* Add styles for the two-column cookery matching grid */
.cookery-grid {
    display: flex;
    justify-content: space-between;
    gap: 2rem;
    width: 100%;
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
}

.cookery-grid .column-left,
.cookery-grid .column-right {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    background: rgba(255, 255, 255, 0.9);
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.cookery-grid .matching-item,
.cookery-grid .matching-match {
    width: 100%;
    padding: 1.2rem;
    background-color: #ffffff;
    border: 3px solid #2196f3;
    border-radius: 10px;
    cursor: pointer;
    transition: all 0.3s ease;
    color: #333;
    font-size: 1.1rem;
    font-weight: 500;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.cookery-grid .matching-item:hover,
.cookery-grid .matching-match:hover {
    background-color: #f8f9fa;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.cookery-grid .matching-item.selected,
.cookery-grid .matching-match.selected {
    background-color: #2196f3;
    border-color: #1976d2;
    color: white;
    box-shadow: 0 4px 8px rgba(33, 150, 243, 0.3);
}

.cookery-grid .matching-item.matched,
.cookery-grid .matching-match.matched {
    background-color: #4caf50;
    border-color: #388e3c;
    color: white;
    box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);
}

.cookery-grid .matching-item.wrong,
.cookery-grid .matching-match.wrong {
    background-color: #f44336;
    border-color: #d32f2f;
    color: white;
    box-shadow: 0 4px 8px rgba(244, 67, 54, 0.3);
}

.timer {
    background-color: #ffffff;
    padding: 10px 20px;
    border-radius: 8px;
    font-size: 1.5rem;
    font-weight: bold;
    color: #333;
    margin-bottom: 20px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    border: 2px solid #2196f3;
}